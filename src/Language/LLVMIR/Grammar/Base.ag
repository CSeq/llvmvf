{
-------------------------------------------------------------------------------
-- Module    :  Language.LLVMIR.Base
-- Copyright :  (c) 2012 Marcelo Sousa
-------------------------------------------------------------------------------
}

module {Language.LLVMIR.Grammar.Base}{}{}

imports 
{
import Prelude              hiding (sequence)
import Data.Char            (chr)
import qualified Data.Map as Data.Map
import qualified Data.Map as Map
import Data.Map
}

-------------------------------------------------------------------------------
-- Module - LLVM IR Module
-------------------------------------------------------------------------------

type PC = (Int)
type Id = (String)
type Label = (String) 
type MLabel = maybe Label
type MId = maybe Id
type MIdentifier = maybe Identifier

type Functions = map {String} Function
type Globals = [Global]
type Identifiers = [Identifier]
type Arguments = [Argument]
type Parameters = [Parameter]
type Values = [Value]
type FuncAttrs = [FunAttr]
type BasicBlocks = [BasicBlock]
type Instructions = [Instruction]
type Attributes = [Attribute]
type ModuleAsms = [ModuleAsm]
type NamedTypes   = map {Id} Type
type Aliases = [Alias]
type Ints = [Int]

type MLinkageTy = maybe Linkage
type MVisibility = maybe Visibility
type MCConv = maybe CConv
type MUnnamedAddr = maybe Bool -- maybe () would be better
type MConstant = maybe Bool
type MDefinitionTy = maybe DefinitionTy
type MAttributes = maybe Attributes
type MAlign = maybe Align
type MGCName = maybe GCName
type MModuleAsms = maybe ModuleAsms
type MSection = maybe Section
type MValue = maybe Value

type Triplet = (Int, Int, Int)
type MapTyInt = map {Type} Triplet
type PTyInt = (Type, Int)
type PTyIntL = [PTyInt]
type PValue = (Value, Value)
type PValues = [PValue]
type PValueIdx = (Value, Int)
type ValueIdxs = [PValueIdx]

type DLayout = [String]

type IntTyValId = (Type, Value, Identifier)
type IntTyValIdL = [IntTyValId]

data Module 
  | Module
    id     :: String
    layout :: DataLayout
    target :: TargetData
    gvars  :: Globals
    funs   :: Functions
    nmdtys :: NamedTypes 
--          aliases :: Aliases
--          symbtbl :: {[SymbolTableEntry]}
--          namedm :: NamedMetadata
--          mdlasm :: MModuleAsms

-- data Endianness
--       | BigEndian
--       | LittleEndian

data DataLayout
      | DataLayout 
          s :: DLayout
--          endianness :: Endianness
--          pointerSize :: Int
--          prefAlignTy :: MapTyInt

data Target
    | MacOs
    | Linux
    
data TargetData
    | TargetData
        s :: String
        t :: Target

data ModuleAsm
      | ModuleAsm asm :: String
      
data Global 
      | GlobalVar 
          name    :: Id
          linkage :: Linkage
          isConst :: Bool
          isUaddr :: Bool 
          ty      :: Type 
          ival    :: MValue
          align   :: Align
--          section  :: MSection

data Function 
      | FunctionDef 
          name    :: Id
          linkage :: Linkage
          retty   :: Type
          params  :: Parameters
          body    :: BasicBlocks 
--          visibility :: MVisibility
--          cconv      :: MCConv
--          uaddr      :: MUnnamedAddr
--          paramattr  :: MAttributes
--          fnAttrs    :: FuncAttrs
--          section    :: MSection
--          optAlign   :: MAlign
--          gcName     :: MGCName
      | FunctionDecl
          name       :: Id
          linkage    :: Linkage
          retty      :: Type
          params     :: Parameters
--          visibility :: MVisibility
--          cconv      :: MCConv
--          uaddr      :: MUnnamedAddr
--          paramattr  :: MAttributes
--          optAlign   :: MAlign          
--          gcName     :: MGCName
          
data BasicBlock
      | BasicBlock 
          label  :: Label
          instrs :: Instructions
--          tmn    :: Terminator

data RetInst
  | ValueRet v :: Value
  | VoidRet 

data Instruction
  -- Terminators
  | Ret pc :: PC r :: RetInst
  | Br  pc :: PC v :: Value t :: Value f :: Value
  | UBr pc :: PC d :: Value 
  | Switch pc :: PC elems :: IntTyValIdL -- TODO
  | Unreachable pc :: PC
  -- Standard Binary Operations
  | Add  pc :: PC id :: Identifier ty :: Type op1 :: Value op2 :: Value
  | FAdd pc :: PC id :: Identifier ty :: Type op1 :: Value op2 :: Value
  | Sub  pc :: PC id :: Identifier ty :: Type op1 :: Value op2 :: Value
  | FSub pc :: PC id :: Identifier ty :: Type op1 :: Value op2 :: Value
  | Mul  pc :: PC id :: Identifier ty :: Type op1 :: Value op2 :: Value
  | FMul pc :: PC id :: Identifier ty :: Type op1 :: Value op2 :: Value
  | UDiv pc :: PC id :: Identifier ty :: Type op1 :: Value op2 :: Value
  | SDiv pc :: PC id :: Identifier ty :: Type op1 :: Value op2 :: Value
  | FDiv pc :: PC id :: Identifier ty :: Type op1 :: Value op2 :: Value
  | URem pc :: PC id :: Identifier ty :: Type op1 :: Value op2 :: Value
  | SRem pc :: PC id :: Identifier ty :: Type op1 :: Value op2 :: Value
  | FRem pc :: PC id :: Identifier ty :: Type op1 :: Value op2 :: Value
  -- Bitwise Binary Operations
  | Shl  pc :: PC id :: Identifier ty :: Type op1 :: Value op2 :: Value
  | LShr pc :: PC id :: Identifier ty :: Type op1 :: Value op2 :: Value
  | AShr pc :: PC id :: Identifier ty :: Type op1 :: Value op2 :: Value
  | And  pc :: PC id :: Identifier ty :: Type op1 :: Value op2 :: Value
  | Or   pc :: PC id :: Identifier ty :: Type op1 :: Value op2 :: Value
  | Xor  pc :: PC id :: Identifier ty :: Type op1 :: Value op2 :: Value
  -- Memory Operations
  | Alloca
      pc    :: PC
      id    :: Identifier
      ty    :: Type
      align :: Align 
  | Store
      pc    :: PC
      ty    :: Type
      v1    :: Value
      v2    :: Value
      align :: Align
  | Load
      pc    :: PC
      id    :: Identifier
      v     :: Value 
      align :: Align
  | GetElementPtr
      pc     :: PC
      id     :: Identifier
      ty     :: Type
      struct :: Value
      idxs   :: Values
  -- Cast Operations
  | Trunc    pc :: PC id :: Identifier v :: Value ty   :: Type -- Truncate integers
  | ZExt     pc :: PC id :: Identifier v :: Value ty   :: Type -- Zero extend integers
  | SExt     pc :: PC id :: Identifier v :: Value ty   :: Type -- Sign extend integers
  | FPToUI   pc :: PC id :: Identifier v :: Value ty   :: Type -- floating point -> UInt
  | FPToSI   pc :: PC id :: Identifier v :: Value ty   :: Type -- floating point -> SInt
  | UIToFP   pc :: PC id :: Identifier v :: Value ty   :: Type -- UInt -> floating point
  | SIToFP   pc :: PC id :: Identifier v :: Value ty   :: Type -- SInt -> floating point
  | FPTrunc  pc :: PC id :: Identifier v :: Value ty   :: Type -- Truncate floating point
  | FPExt    pc :: PC id :: Identifier v :: Value ty   :: Type -- Extend floating point
  | PtrToInt pc :: PC id :: Identifier v :: Value ty   :: Type -- Pointer -> Integer
  | IntToPtr pc :: PC id :: Identifier v :: Value ty   :: Type -- Integer -> Pointer
  | BitCast  pc :: PC id :: Identifier v :: Value ty   :: Type -- Type cast      
  -- Other Operations
  | ICmp pc :: PC id :: Identifier cond :: IntPredicate ty :: Type op1 :: Value op2 :: Value 
  | FCmp pc :: PC id :: Identifier cond :: RealPredicate ty :: Type op1 :: Value op2 :: Value 
  | PHI
      pc :: PC
      id :: Identifier
      ty :: Type
      vals :: PValues
  | Call
      pc     :: PC
      mres   :: Identifier
      ty     :: Type
      callee :: Id 
      args   :: Values 
  | Select
      pc :: PC
      id :: Identifier
      cond :: Value
      valt :: Value
      valf :: Value
  | ExtractValue
      pc   :: PC
      id   :: Identifier
      aggr :: Value
      idxs :: Ints
  | AtomicRMW
      pc :: PC
      id :: Identifier
      args :: Values
      op  :: BinOp
      ord :: AtomicOrdering
  -- Concurrent Operations
  | CreateThread
      pc   :: PC 
      args :: Values
  | MutexInit
      pc    :: PC
      rv    :: Identifier
      mutex :: Value     
  | MutexLock
      pc    :: PC
      rv    :: Identifier
      mutex :: Value
  | MutexUnlock
      pc    :: PC
      rv    :: Identifier
      mutex :: Value
 
data Identifier 
  | Global name :: Id -- (functions, global variables) begin with the '@'
  | Local  name :: Id -- (register names, types) begin with the '%'
         
data Value 
  | Id       v :: Identifier ty :: Type
  | Constant c :: Constant

data Constant
  | BlockAddr
  | ConstantAggregateZero  ty   :: Type
  | ConstantArray          ty   :: Type  vals :: Values
  | ConstantDataSequential cds  :: ConstantDataSequential
  | ConstantExpr           expr :: ConstantExpr
  | ConstantFP             fp   :: ConstantFP
  | ConstantInt            iv   :: Int   ty :: Type
  | ConstantPointerNull    ty   :: Type
  | ConstantStruct         ty   :: Type vals :: Values
  | ConstantVector          
  | GlobalValue            gv :: GlobalValue
  | UndefValue

data ConstantFP
  | ConstantFPFloat  fpv :: Float ty :: Type
  | ConstantFPDouble dbv :: Double ty :: Type

data GlobalValue
  | FunctionValue  n :: Identifier ty :: Type
  | GlobalAlias    n :: Identifier ty :: Type
  | GlobalVariable n :: Identifier ty :: Type

data ConstantDataSequential
  | ConstantDataArray  ty :: Type val :: String 
  | ConstantDataVector ty :: Type val :: String

data ConstantExpr
  | BinaryConstantExpr
  | CompareConstantExpr       cmpExpr :: CompareConstantExpr 
  | ExtractElementConstantExpr
  | ExtractValueConstantExpr
  | GetElementPtrConstantExpr struct :: Value idxs :: Values
  | InsertElementConstantExpr
  | InsertValueConstantExpr
  | SelectConstantExpr
  | ShuffleVectorConstantExpr
  | UnaryConstantExpr         name :: String op :: Int val :: Value ty :: Type

data CompareConstantExpr
  | ICmpExpr cond :: IntPredicate ty :: Type op1 :: Value op2 :: Value
  | FCmpExpr cond :: RealPredicate ty :: Type op1 :: Value op2 :: Value 

data Align
      | Align n :: Int

data BinOp
  | OpXchg
  | OpAdd
  | OpSub
  | OpAnd
  | OpNand
  | OpOr
  | OpXor
  | OpMax
  | OpMin
  | OpUMax
  | OpUMin

data AtomicOrdering
  | NotAtomic 
  | Unordered 
  | Monotonic 
 -- | // Consume = 3,  // Not specified yet.
  | Acquire 
  | Release 
  | AcquireRelease 
  | SequentiallyConsistent 

data IntPredicate
      | IntEQ                       -- ^ equal
      | IntNE                       -- ^ not equal
      | IntUGT                      -- ^ unsigned greater than
      | IntUGE                      -- ^ unsigned greater or equal
      | IntULT                      -- ^ unsigned less than
      | IntULE                      -- ^ unsigned less or equal
      | IntSGT                      -- ^ signed greater than
      | IntSGE                      -- ^ signed greater or equal
      | IntSLT                      -- ^ signed less than
      | IntSLE                      -- ^ signed less or equal

data RealPredicate
      | LLVMRealPredicateFalse -- ^ Always false (always folded) 
      | LLVMRealOEQ            -- ^ True if ordered and equal 
      | LLVMRealOGT            -- ^ True if ordered and greater than 
      | LLVMRealOGE            -- ^ True if ordered and greater than or equal 
      | LLVMRealOLT            -- ^ True if ordered and less than 
      | LLVMRealOLE            -- ^ True if ordered and less than or equal 
      | LLVMRealONE            -- ^ True if ordered and operands are unequal 
      | LLVMRealORD            -- ^ True if ordered (no nans) 
      | LLVMRealUNO            -- ^ True if unordered: isnan(X) | isnan(Y) 
      | LLVMRealUEQ            -- ^ True if unordered or equal 
      | LLVMRealUGT            -- ^ True if unordered or greater than 
      | LLVMRealUGE            -- ^ True if unordered, greater than, or equal 
      | LLVMRealULT            -- ^ True if unordered or less than
      | LLVMRealULE            -- ^ True if unordered, less than, or equal 
      | LLVMRealUNE            -- ^ True if unordered or not equal 
      | LLVMRealPredicateTrue  -- ^ Always true (always folded) 

data Section
      | Section s :: String
      
data Argument
      | Argument arg :: Value

data Parameter
      | Parameter 
          var :: Id  -- ^In practice, the name is optional
          ty  :: Type
       -- attr :: MAttribute            

--  All Global Variables and Functions have one of the following types of linkage.
data Linkage
    | ExternalLinkage     -- ^Externally visible function
    | AvailableExternallyLinkage
    | LinkOnceAnyLinkage  -- ^Keep one copy of function when linking (inline)
    | LinkOnceODRLinkage  -- ^Same, but only replaced by something equivalent.
    | WeakAnyLinkage      -- ^Keep one copy of named function when linking (weak)
    | WeakODRLinkage      -- ^Same, but only replaced by something equivalent.
    | AppendingLinkage    -- ^Special purpose, only applies to global arrays
    | InternalLinkage     -- ^Rename collisions when linking (static functions)
    | PrivateLinkage      -- ^Like Internal, but omit from symbol table
    | DLLImportLinkage    -- ^Function to be imported from DLL
    | DLLExportLinkage    -- ^Function to be accessible from DLL
    | ExternalWeakLinkage -- ^ExternalWeak linkage description
    | GhostLinkage        -- ^Stand-in functions for streaming fns from BC files
    | CommonLinkage       -- ^Tentative definitions
    | LinkerPrivateLinkage -- ^Like Private, but linker removes.
    | LinkerPrivateWeakLinkage -- ^Similar to PrivateLinkage, but the symbol is weak.
    | LinkerPrivateWeakDefAutoLinkage -- ^Similar to LinkerPrivateWeakLinkage, but its known that the address of the object is not taken.

-- Call Convention
-- LLVM functions, calls and invokes can all have an optional calling convention specified for the call.
data CConv 
      | Ccc    -- The C calling convention
      | Fastcc -- The fast calling convention
      | Coldcc -- The cold calling convention
      | Cc10   -- GHC convention
      | Cc n :: Int -- Numbered convention

-- All Global Variables and Functions have one of the following visibility styles.
data Visibility 
      | Default
      | Hidden
      | Protected

-- Parameter Attributes      
data Attribute
    | ZExtAttribute
    | SExtAttribute
    | NoReturnAttribute
    | InRegAttribute
    | StructRetAttribute
    | NoUnwindAttribute
    | NoAliasAttribute
    | ByValAttribute
    | NestAttribute
    | ReadNoneAttribute
    | ReadOnlyAttribute
    | NoInlineAttribute
    | AlwaysInlineAttribute
    | OptimizeForSizeAttribute
    | StackProtectAttribute
    | StackProtectReqAttribute
    | NoCaptureAttribute
    | NoRedZoneAttribute
    | NoImplicitFloatAttribute
    | NakedAttribute

-- Garbage Collector Names   
data GCName
      | GCName name :: String

-- Function Attributes
data FunAttr
      | AddressSafety
      | Alignstack n :: Int
      | Alwaysinline
      | Nonlazybind
      | Inlinehint
      | Naked
      | Noimplicitfloat
      | Noinline
      | Noredzone
      | Noreturn
      | Nounwind
      | Optsize
      | Readnone
      | Readonly
      | ReturnsTwice
      | Ssp
      | Sspreq
      | Uwtable
                  
data DefinitionTy
      | ThreadLocal
      | ConstantD

data Alias
      | Alias 
          name       :: Id
--          linkage    :: MLinkageTy
--          visibility :: MVisibility
--          aliaseeTy  :: Type
--          aliasee    :: Id
  
set Every = Module Global Function Linkage CConv Visibility DefinitionTy LocalVar Argument Align GCName FunAttr BasicBlock Instruction DataLayout Alias Attribute Section Value Identifier TargetData Target Parameter IntPredicate RealPredicate Constant GlobalValue ConstantDataSequential ConstantExpr ConstantFP RetInst NamedTypes CompareConstantExpr BinOp AtomicOrdering

deriving Every: Show
deriving Every: Eq
deriving Every: Ord
deriving Linkage: Enum
