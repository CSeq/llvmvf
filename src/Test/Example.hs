module Test.Example where

import Language.LLVMIR 
import Data.Map


s :: Module
s = Module {id_Module_Module = "tn.bc", 
            layout_Module_Module = DataLayout {s_DataLayout_DataLayout = 
            	   ["e","p:64:64:64","i1:8:8","i8:8:8","i16:16:16","i32:32:32","i64:64:64","f32:32:32","f64:64:64","v64:64:64","v128:128:128","a0:0:64","s0:64:64","f80:128:128","n8:16:32:64","S128"]}, target_Module_Module = TargetData {s_TargetData_TargetData = "x86_64-unknown-linux-gnu", t_TargetData_TargetData = Linux}, 
            	   gvars_Module_Module = [], 
            	   funs_Module_Module = fromList [(Global {name_Identifier_Global = "main"},
            	   	FunctionDef {name_Function_FunctionDef = Global {name_Identifier_Global = "main"}, 
            	   	linkage_Function_FunctionDef = ExternalLinkage, 
            	   	retty_Function_FunctionDef = TyInt {p_Type_TyInt = 32}, 
            	   	isVar_Function_FunctionDef = False, 
            	   	params_Function_FunctionDef = [], 
            	   	body_Function_FunctionDef = [BasicBlock {label_BasicBlock_BasicBlock = Local {name_Identifier_Local = "bb"}, 
            	   									phis_BasicBlock_BasicBlock = [], 
            	   									instrs_BasicBlock_BasicBlock = [], 
            	   									tmn_BasicBlock_BasicBlock = 
            	   										Ret {pc_Terminator_Ret = 1, r_Terminator_Ret = ValueRet {v_RetInst_ValueRet = Constant {c_Value_Constant = SmpConst {sc_Constant_SmpConst = ConstantInt {iv_SimpleConstant_ConstantInt = 0, ty_SimpleConstant_ConstantInt = TyInt {p_Type_TyInt = 32}}}}}}}]})], 
            	    nmdtys_Module_Module = fromList []}

s1 :: Module
s1 = Module {id_Module_Module = "tn.bc", layout_Module_Module = DataLayout {s_DataLayout_DataLayout = ["e","p:64:64:64","i1:8:8","i8:8:8","i16:16:16","i32:32:32","i64:64:64","f32:32:32","f64:64:64","v64:64:64","v128:128:128","a0:0:64","s0:64:64","f80:128:128","n8:16:32:64","S128"]}, target_Module_Module = TargetData {s_TargetData_TargetData = "x86_64-unknown-linux-gnu", t_TargetData_TargetData = Linux}, gvars_Module_Module = [], funs_Module_Module = fromList [(Global {name_Identifier_Global = "main"},FunctionDef {name_Function_FunctionDef = Global {name_Identifier_Global = "main"}, linkage_Function_FunctionDef = ExternalLinkage, retty_Function_FunctionDef = TyInt {p_Type_TyInt = 32}, isVar_Function_FunctionDef = False, params_Function_FunctionDef = [], body_Function_FunctionDef = [BasicBlock {label_BasicBlock_BasicBlock = Local {name_Identifier_Local = "bb"}, phis_BasicBlock_BasicBlock = [], instrs_BasicBlock_BasicBlock = [Alloca {pc_Instruction_Alloca = 1, id_Instruction_Alloca = Local {name_Identifier_Local = "tmp"}, ty_Instruction_Alloca = TyInt {p_Type_TyInt = 32}, align_Instruction_Alloca = Align {n_Align_Align = 4}},Store {pc_Instruction_Store = 2, ty_Instruction_Store = TyVoid, v1_Instruction_Store = Constant {c_Value_Constant = SmpConst {sc_Constant_SmpConst = ConstantInt {iv_SimpleConstant_ConstantInt = 0, ty_SimpleConstant_ConstantInt = TyInt {p_Type_TyInt = 32}}}}, v2_Instruction_Store = Id {v_Value_Id = Local {name_Identifier_Local = "tmp"}, ty_Value_Id = TyPointer {ty_Type_TyPointer = TyInt {p_Type_TyInt = 32}}}, align_Instruction_Store = Align {n_Align_Align = 0}}], tmn_BasicBlock_BasicBlock = Ret {pc_Terminator_Ret = 3, r_Terminator_Ret = ValueRet {v_RetInst_ValueRet = Constant {c_Value_Constant = SmpConst {sc_Constant_SmpConst = ConstantInt {iv_SimpleConstant_ConstantInt = 0, ty_SimpleConstant_ConstantInt = TyInt {p_Type_TyInt = 32}}}}}}}]})], nmdtys_Module_Module = fromList []}

s2 :: Module
s2 = Module {id_Module_Module = "self-phi.bc", layout_Module_Module = DataLayout {s_DataLayout_DataLayout = []}, target_Module_Module = TargetData {s_TargetData_TargetData = "", t_TargetData_TargetData = Linux}, gvars_Module_Module = [], funs_Module_Module = fromList [(Global {name_Identifier_Global = "f"},FunctionDef {name_Function_FunctionDef = Global {name_Identifier_Global = "f"}, linkage_Function_FunctionDef = ExternalLinkage, retty_Function_FunctionDef = TyInt {p_Type_TyInt = 32}, isVar_Function_FunctionDef = False, params_Function_FunctionDef = [Parameter {var_Parameter_Parameter = Local {name_Identifier_Local = "a"}, ty_Parameter_Parameter = TyInt {p_Type_TyInt = 32}}], body_Function_FunctionDef = [BasicBlock {label_BasicBlock_BasicBlock = Local {name_Identifier_Local = "bb"}, phis_BasicBlock_BasicBlock = [], instrs_BasicBlock_BasicBlock = [], tmn_BasicBlock_BasicBlock = UBr {pc_Terminator_UBr = 1, d_Terminator_UBr = Id {v_Value_Id = Local {name_Identifier_Local = "bb1"}, ty_Value_Id = TyLabel}}},BasicBlock {label_BasicBlock_BasicBlock = Local {name_Identifier_Local = "bb1"}, phis_BasicBlock_BasicBlock = [PHI {pc_PHI_PHI = 2, id_PHI_PHI = Local {name_Identifier_Local = "i"}, ty_PHI_PHI = TyInt {p_Type_TyInt = 32}, vals_PHI_PHI = [(Id {v_Value_Id = Local {name_Identifier_Local = "a"}, ty_Value_Id = TyInt {p_Type_TyInt = 32}},Id {v_Value_Id = Local {name_Identifier_Local = "bb"}, ty_Value_Id = TyLabel}),(Id {v_Value_Id = Local {name_Identifier_Local = "i"}, ty_Value_Id = TyInt {p_Type_TyInt = 32}},Id {v_Value_Id = Local {name_Identifier_Local = "bb1"}, ty_Value_Id = TyLabel})]}], instrs_BasicBlock_BasicBlock = [Add {pc_Instruction_Add = 3, id_Instruction_Add = Local {name_Identifier_Local = "b"}, ty_Instruction_Add = TyInt {p_Type_TyInt = 32}, op1_Instruction_Add = Id {v_Value_Id = Local {name_Identifier_Local = "i"}, ty_Value_Id = TyInt {p_Type_TyInt = 32}}, op2_Instruction_Add = Id {v_Value_Id = Local {name_Identifier_Local = "i"}, ty_Value_Id = TyInt {p_Type_TyInt = 32}}},ICmp {pc_Instruction_ICmp = 4, id_Instruction_ICmp = Local {name_Identifier_Local = "c"}, cond_Instruction_ICmp = IntEQ, ty_Instruction_ICmp = TyInt {p_Type_TyInt = 1}, op1_Instruction_ICmp = Id {v_Value_Id = Local {name_Identifier_Local = "b"}, ty_Value_Id = TyInt {p_Type_TyInt = 32}}, op2_Instruction_ICmp = Constant {c_Value_Constant = SmpConst {sc_Constant_SmpConst = ConstantInt {iv_SimpleConstant_ConstantInt = 0, ty_SimpleConstant_ConstantInt = TyInt {p_Type_TyInt = 32}}}}}], tmn_BasicBlock_BasicBlock = Br {pc_Terminator_Br = 5, v_Terminator_Br = Id {v_Value_Id = Local {name_Identifier_Local = "c"}, ty_Value_Id = TyInt {p_Type_TyInt = 1}}, t_Terminator_Br = Id {v_Value_Id = Local {name_Identifier_Local = "bb2"}, ty_Value_Id = TyLabel}, f_Terminator_Br = Id {v_Value_Id = Local {name_Identifier_Local = "bb1"}, ty_Value_Id = TyLabel}}},BasicBlock {label_BasicBlock_BasicBlock = Local {name_Identifier_Local = "bb2"}, phis_BasicBlock_BasicBlock = [], instrs_BasicBlock_BasicBlock = [], tmn_BasicBlock_BasicBlock = Ret {pc_Terminator_Ret = 6, r_Terminator_Ret = ValueRet {v_RetInst_ValueRet = Id {v_Value_Id = Local {name_Identifier_Local = "b"}, ty_Value_Id = TyInt {p_Type_TyInt = 32}}}}}]})], nmdtys_Module_Module = fromList []}

s3 :: Module
s3 = Module {id_Module_Module = "atomic-swap.o.bc", layout_Module_Module = DataLayout {s_DataLayout_DataLayout = []}, target_Module_Module = TargetData {s_TargetData_TargetData = "", t_TargetData_TargetData = Linux}, gvars_Module_Module = [], funs_Module_Module = fromList [(Global {name_Identifier_Global = "abort"},FunctionDecl {name_Function_FunctionDecl = Global {name_Identifier_Global = "abort"}, linkage_Function_FunctionDecl = ExternalLinkage, retty_Function_FunctionDecl = TyVoid, isVar_Function_FunctionDecl = False, params_Function_FunctionDecl = []}),(Global {name_Identifier_Global = "cmpswap"},FunctionDef {name_Function_FunctionDef = Global {name_Identifier_Global = "cmpswap"}, linkage_Function_FunctionDef = ExternalLinkage, retty_Function_FunctionDef = TyInt {p_Type_TyInt = 8}, isVar_Function_FunctionDef = False, params_Function_FunctionDef = [], body_Function_FunctionDef = [BasicBlock {label_BasicBlock_BasicBlock = Local {name_Identifier_Local = "bb"}, phis_BasicBlock_BasicBlock = [], instrs_BasicBlock_BasicBlock = [Alloca {pc_Instruction_Alloca = 1, id_Instruction_Alloca = Local {name_Identifier_Local = "i"}, ty_Instruction_Alloca = TyInt {p_Type_TyInt = 8}, align_Instruction_Alloca = Align {n_Align_Align = 0}},Cmpxchg {pc_Instruction_Cmpxchg = 2, id_Instruction_Cmpxchg = Local {name_Identifier_Local = "j"}, mptr_Instruction_Cmpxchg = Id {v_Value_Id = Local {name_Identifier_Local = "i"}, ty_Value_Id = TyPointer {ty_Type_TyPointer = TyInt {p_Type_TyInt = 8}}}, cval_Instruction_Cmpxchg = Constant {c_Value_Constant = SmpConst {sc_Constant_SmpConst = ConstantInt {iv_SimpleConstant_ConstantInt = 0, ty_SimpleConstant_ConstantInt = TyInt {p_Type_TyInt = 8}}}}, nval_Instruction_Cmpxchg = Constant {c_Value_Constant = SmpConst {sc_Constant_SmpConst = ConstantInt {iv_SimpleConstant_ConstantInt = 42, ty_SimpleConstant_ConstantInt = TyInt {p_Type_TyInt = 8}}}}, ord_Instruction_Cmpxchg = Monotonic}], tmn_BasicBlock_BasicBlock = Ret {pc_Terminator_Ret = 3, r_Terminator_Ret = ValueRet {v_RetInst_ValueRet = Id {v_Value_Id = Local {name_Identifier_Local = "j"}, ty_Value_Id = TyInt {p_Type_TyInt = 8}}}}}]}),(Global {name_Identifier_Global = "swap"},FunctionDef {name_Function_FunctionDef = Global {name_Identifier_Global = "swap"}, linkage_Function_FunctionDef = ExternalLinkage, retty_Function_FunctionDef = TyInt {p_Type_TyInt = 8}, isVar_Function_FunctionDef = False, params_Function_FunctionDef = [], body_Function_FunctionDef = [BasicBlock {label_BasicBlock_BasicBlock = Local {name_Identifier_Local = "bb"}, phis_BasicBlock_BasicBlock = [], instrs_BasicBlock_BasicBlock = [Alloca {pc_Instruction_Alloca = 4, id_Instruction_Alloca = Local {name_Identifier_Local = "i"}, ty_Instruction_Alloca = TyInt {p_Type_TyInt = 8}, align_Instruction_Alloca = Align {n_Align_Align = 0}},AtomicRMW {pc_Instruction_AtomicRMW = 5, id_Instruction_AtomicRMW = Local {name_Identifier_Local = "j"}, mptr_Instruction_AtomicRMW = Id {v_Value_Id = Local {name_Identifier_Local = "i"}, ty_Value_Id = TyPointer {ty_Type_TyPointer = TyInt {p_Type_TyInt = 8}}}, opval_Instruction_AtomicRMW = Constant {c_Value_Constant = SmpConst {sc_Constant_SmpConst = ConstantInt {iv_SimpleConstant_ConstantInt = 42, ty_SimpleConstant_ConstantInt = TyInt {p_Type_TyInt = 8}}}}, op_Instruction_AtomicRMW = OpXchg, ord_Instruction_AtomicRMW = Monotonic}], tmn_BasicBlock_BasicBlock = Ret {pc_Terminator_Ret = 6, r_Terminator_Ret = ValueRet {v_RetInst_ValueRet = Id {v_Value_Id = Local {name_Identifier_Local = "j"}, ty_Value_Id = TyInt {p_Type_TyInt = 8}}}}}]})], nmdtys_Module_Module = fromList []}