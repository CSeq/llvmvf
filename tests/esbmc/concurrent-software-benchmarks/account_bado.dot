digraph structs {
bgcolor=transparent;
node [shape=Mrecord];
-1 [label="||", shape=Mdiamond];
subgraph cluster_main {
style=filled; color=lightblue;
subgraph cluster_main1 {
style=filled; color=gray;
36 [label="%t1 = alloca i64, align 8"];
37 [label="%t2 = alloca i64, align 8"];
38 [label="%t3 = alloca i64, align 8"];
39 [label="call @pthread_mutex_init"];
40 [label="call @nondet_int"];
41 [label="void store i32 %tmp1, i32* @x, align 4"];
42 [label="call @nondet_int"];
43 [label="void store i32 %tmp2, i32* @y, align 4"];
44 [label="call @nondet_int"];
45 [label="void store i32 %tmp3, i32* @z, align 4"];
46 [label="%tmp4 = load i32* @x, align 4"];
47 [label="void store i32 %tmp4, i32* @balance, align 4"];
48 [label="create_thread"];
49 [label="create_thread"];
50 [label="create_thread"];
51 [label="ret i32 0"];
 label = "basic block bb"; }
 label = "function main"; }
subgraph cluster_check_result {
style=filled; color=lightblue;
subgraph cluster_check_result1 {
style=filled; color=gray;
17 [label="call @pthread_mutex_lock"];
18 [label="%tmp1 = load i8* @deposit_done, align 1"];
19 [label="%tmp2 = icmp eq i8 %tmp1, i8 0"];
20 [label="%tmp3 = load i8* @withdraw_done, align 1"];
21 [label="%tmp4 = icmp eq i8 %tmp3, i8 0"];
22 [label="%or.cond = or i1 i1 %tmp2, i1 %tmp4"];
23 [label="br i1 %or.cond, label %bb15, label %bb5"];
 label = "basic block bb"; }
subgraph cluster_check_result2 {
style=filled; color=gray;
24 [label="%tmp6 = load i32* @balance, align 4"];
25 [label="%tmp7 = load i32* @x, align 4"];
26 [label="%tmp8 = load i32* @y, align 4"];
27 [label="%tmp9 = load i32* @z, align 4"];
28 [label="i32 %tmp10 = sub i32 %tmp7, i32 %tmp8"];
29 [label="i32 %tmp11 = sub i32 %tmp10, i32 %tmp9"];
30 [label="%tmp12 = icmp eq i32 %tmp6, i32 %tmp11"];
31 [label="%tmp13 = zext i1 %tmp12 to i32"];
32 [label="call @assert"];
33 [label="br label %bb15"];
 label = "basic block bb5"; }
subgraph cluster_check_result3 {
style=filled; color=gray;
34 [label="call @pthread_mutex_unlock"];
35 [label="ret undef"];
 label = "basic block bb15"; }

label = "function check_result"; }
subgraph cluster_deposit {
style=filled; color=lightblue;
subgraph cluster_deposit1 {
style=filled; color=gray;
1 [label="call @pthread_mutex_lock"];
2 [label="%tmp1 = load i32* @balance, align 4"];
3 [label="%tmp2 = load i32* @y, align 4"];
4 [label="i32 %tmp3 = add i32 %tmp2, i32 %tmp1"];
5 [label="void store i32 %tmp3, i32* @balance, align 4"];
6 [label="void store i8 1, i8* @deposit_done, align 1"];
7 [label="call @pthread_mutex_unlock"];
8 [label="ret undef"];
 label = "basic block bb"; }
 label = "function deposit"; }
subgraph cluster_withdraw {
style=filled; color=lightblue;
subgraph cluster_withdraw1 {
style=filled; color=gray;
9 [label="call @pthread_mutex_lock"];
10 [label="%tmp1 = load i32* @balance, align 4"];
11 [label="%tmp2 = load i32* @z, align 4"];
12 [label="i32 %tmp3 = sub i32 %tmp1, i32 %tmp2"];
13 [label="void store i32 %tmp3, i32* @balance, align 4"];
14 [label="void store i8 1, i8* @withdraw_done, align 1"];
15 [label="call @pthread_mutex_unlock"];
16 [label="ret undef"];
 label = "basic block bb"; }
 label = "function withdraw"; }
-1 -> 17;
17 -> 18;
18 -> 19;
19 -> 20;
20 -> 21;
21 -> 22;
22 -> 23;
23 -> 34;
23 -> 24;
24 -> 25;
25 -> 26;
26 -> 27;
27 -> 28;
28 -> 29;
29 -> 30;
30 -> 31;
31 -> 32;
32 -> 33;
33 -> 34;
34 -> 35;
-1 -> 1;
1 -> 2;
2 -> 3;
3 -> 4;
4 -> 5;
5 -> 6;
6 -> 7;
7 -> 8;
36 -> 37;
37 -> 38;
38 -> 39;
39 -> 40;
40 -> 41;
41 -> 42;
42 -> 43;
43 -> 44;
44 -> 45;
45 -> 46;
46 -> 47;
47 -> 48;
48 -> -1;
48 -> 49;
49 -> -1;
49 -> 50;
50 -> -1;
50 -> 51;
-1 -> 9;
9 -> 10;
10 -> 11;
11 -> 12;
12 -> 13;
13 -> 14;
14 -> 15;
15 -> 16; }
