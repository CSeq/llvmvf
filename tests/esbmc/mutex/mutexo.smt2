(set-logic QF_AUFBV)
(set-option :produce-models true)
(declare-sort Pair 2)
(define-sort I8 () (_ BitVec 8))
(define-sort I32 () (_ BitVec 32))
(define-sort I64 () (_ BitVec 64))
(define-sort struct.__pthread_internal_list () Bool)
(define-sort struct.__pthread_mutex_s () Bool)
(define-sort Array48I8 () (Array (_ BitVec 6) I8))
(define-sort union.pthread_attr_t () (Pair I64 Array48I8))
(define-sort union.pthread_mutex_t () Bool)
(define-sort union.pthread_mutexattr_t () I32)
(declare-fun x () I32)
(declare-fun lx () I32)
(declare-fun m () union.pthread_mutex_t)
(declare-fun lm () I32)
(define-sort Array5I8 () (Array (_ BitVec 3) I8))
(declare-fun .str () Array5I8)
(declare-fun l.str () I32)
(define-sort Array8I8 () (Array (_ BitVec 4) I8))
(declare-fun .str1 () Array8I8)
(declare-fun l.str1 () I32)
(define-sort Array17I8 () (Array (_ BitVec 5) I8))
(declare-fun __PRETTY_FUNCTION__.Ty () Array17I8)
(declare-fun l__PRETTY_FUNCTION__.Ty () I32)
(assert (and (= x (_ bv2 32)) (= lx (_ bv0 32))))
(declare-fun Tytmp1 () I32)
(declare-fun Tytmp2 () Bool)
(declare-fun maint1 () I64)
(declare-fun maint2 () I64)
(declare-fun Txarg () I8)
(declare-fun Tyarg () I8)
(declare-fun x0 () I32)
(declare-fun pc0 () I32)
(declare-fun pc1 () I32)
(declare-fun pc2 () I32)
(declare-fun pc3 () I32)
(declare-fun pc4 () I32)
(assert (and (= pc0 (_ bv13 32)) (and (= pc1 (_ bv14 32)) (and (= pc2 (_ bv15 32)) (and (= pc3 (_ bv16 32)) (= pc4 (_ bv17 32)))))))
(declare-fun px0 () I32)
(declare-fun px1 () I32)
(declare-fun m0 () Bool)
(declare-fun m1 () Bool)
(declare-fun Txpc0 () I32)
(declare-fun Typc0 () I32)
(declare-fun Txpc1 () I32)
(declare-fun Typc1 () I32)
(declare-fun Tx0 () Bool)
(declare-fun Ty0 () Bool)
(declare-fun Tx1 () Bool)
(declare-fun Ty1 () Bool)
(assert (and (and (= Txpc0 (_ bv1 32)) (= Typc0 (_ bv5 32))) (and (= px0 lx) (and (and (and (or (and Tx0 (not Ty0)) (and Ty0 (not Tx0))) (or (and (and (and Tx0 (and (= Txpc0 (_ bv1 32)) (and (= m0 false) (= px1 px0)))) (= Txpc1 (_ bv2 32))) (and m1 (= Typc1 Typc0))) (or (and (and (and Tx0 (and (= Txpc0 (_ bv2 32)) (and (= x0 (_ bv3 32)) (= px1 (_ bv2 32))))) (= Txpc1 (_ bv3 32))) (and (= m1 m0) (= Typc1 Typc0))) (or (and (and (and Tx0 (and (= Txpc0 (_ bv3 32)) (and m0 (= px1 px0)))) (= Txpc1 (_ bv4 32))) (and (= m1 false) (= Typc1 Typc0))) (or (and (and (and Tx0 (and (= Txpc0 (_ bv4 32)) (= px1 px0))) false) (and (= m1 m0) (= Typc1 Typc0))) (or (and (and (and Ty0 (and (= Typc0 (_ bv5 32)) (and (= m0 false) (= px1 px0)))) (= Typc1 (_ bv6 32))) (and m1 (= Txpc1 Txpc0))) (or (and (and (and Ty0 (and (= Typc0 (_ bv6 32)) (and (or (and (= px0 lx) (= Tytmp1 x)) (and (= px0 (_ bv2 32)) (= Tytmp1 x0))) (= px1 px0)))) (= Typc1 (_ bv7 32))) (and (= m1 m0) (= Txpc1 Txpc0))) (or (and (and (and Ty0 (and (= Typc0 (_ bv7 32)) (and (= Tytmp2 (= Tytmp1 (_ bv2 32))) (= px1 px0)))) (= Typc1 (_ bv8 32))) (and (= m1 m0) (= Txpc1 Txpc0))) (or (and (and (and Ty0 (and (= Typc0 (_ bv8 32)) (= px1 px0))) (or (and Tytmp2 (= Typc1 (_ bv11 32))) (and (not Tytmp2) (= Typc1 (_ bv9 32))))) (and (= m1 m0) (= Txpc1 Txpc0))) (or (and (and (and Ty0 (= Typc0 (_ bv9 32))) (= Typc1 (_ bv10 32))) (and (= m1 m0) (= Txpc1 Txpc0))) (or (and (and (and Ty0 (and (= Typc0 (_ bv10 32)) (= px1 px0))) false) (and (= m1 m0) (= Txpc1 Txpc0))) (or (and (and (and Ty0 (and (= Typc0 (_ bv11 32)) (and m0 (= px1 px0)))) (= Typc1 (_ bv12 32))) (and (= m1 false) (= Txpc1 Txpc0))) (and (and (and Ty0 (and (= Typc0 (_ bv12 32)) (= px1 px0))) false) (and (= m1 m0) (= Txpc1 Txpc0))))))))))))))) (and (or (and Tx1 (not Ty1)) (and Ty1 (not Tx1))) (or (and Tx1 (and (= Txpc1 (_ bv1 32)) (= m1 false))) (or (and Tx1 (and (= Txpc1 (_ bv2 32)) (= x0 (_ bv3 32)))) (or (and Tx1 (and (= Txpc1 (_ bv3 32)) m1)) (or (and (and Tx1 (= Txpc1 (_ bv4 32))) false) (or (and Ty1 (and (= Typc1 (_ bv5 32)) (= m1 false))) (or (and Ty1 (and (= Typc1 (_ bv6 32)) (or (and (= px1 lx) (= Tytmp1 x)) (and (= px1 (_ bv2 32)) (= Tytmp1 x0))))) (or (and Ty1 (and (= Typc1 (_ bv7 32)) (= Tytmp2 (= Tytmp1 (_ bv2 32))))) (or (and Ty1 (= Typc1 (_ bv8 32))) (or (and Ty1 (= Typc1 (_ bv9 32))) (or (and (and Ty1 (= Typc1 (_ bv10 32))) false) (or (and Ty1 (and (= Typc1 (_ bv11 32)) m1)) (and (and Ty1 (= Typc1 (_ bv12 32))) false)))))))))))))) (or (= Txpc0 (_ bv9 32)) (or (= Typc0 (_ bv9 32)) (or (= Txpc1 (_ bv9 32)) (= Typc1 (_ bv9 32)))))))))
(check-sat)
(exit)
