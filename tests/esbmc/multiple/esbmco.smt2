(set-logic QF_AUFBV)
(set-option :produce-models true)
(declare-sort Pair 2)
(define-sort I8 () (_ BitVec 8))
(define-sort I32 () (_ BitVec 32))
(define-sort I64 () (_ BitVec 64))
(define-sort Array48I8 () (Array (_ BitVec 6) I8))
(define-sort union.pthread_attr_t () (Pair I64 Array48I8))
(declare-fun j () I32)
(declare-fun lj () I32)
(declare-fun x () I32)
(declare-fun lx () I32)
(declare-fun i () I32)
(declare-fun li () I32)
(define-sort Array13I8 () (Array (_ BitVec 4) I8))
(declare-fun .str () Array13I8)
(declare-fun l.str () I32)
(define-sort Array8I8 () (Array (_ BitVec 4) I8))
(declare-fun .str1 () Array8I8)
(declare-fun l.str1 () I32)
(define-sort Array17I8 () (Array (_ BitVec 5) I8))
(declare-fun __PRETTY_FUNCTION__.Tx () Array17I8)
(declare-fun l__PRETTY_FUNCTION__.Tx () I32)
(define-sort Array10I32 () (Array (_ BitVec 4) I32))
(declare-fun a () Array10I32)
(declare-fun la () I32)
(assert (and (and (= j (_ bv1 32)) (= lj (_ bv0 32))) (and (and (= x (_ bv2 32)) (= lx (_ bv0 32))) (and (= i (_ bv0 32)) (= li (_ bv0 32))))))
(declare-fun Txtmp () I32)
(declare-fun Txtmp1 () Bool)
(declare-fun Txtmp3 () I32)
(declare-fun Txtmp4 () Bool)
(declare-fun Txtmp7 () I32)
(declare-fun Txtmp8 () I32)
(declare-fun Txtmp9 () I64)
(declare-fun Txtmp10 () I32)
(declare-fun Tytmp () I32)
(declare-fun Tytmp1 () Bool)
(declare-fun Tytmp3 () I32)
(declare-fun Tytmp4 () I32)
(declare-fun Tytmp5 () I32)
(declare-fun Tytmp6 () I64)
(declare-fun Tytmp7 () I32)
(declare-fun Tztmp () I32)
(declare-fun Tztmp1 () Bool)
(declare-fun mainid1 () I64)
(declare-fun mainid2 () I64)
(declare-fun mainid3 () I64)
(declare-fun mainarg1 () I32)
(declare-fun mainarg2 () I32)
(declare-fun maintmp () I32)
(declare-fun maintmp1 () I8)
(declare-fun Txarg () I8)
(declare-fun maintmp3 () I8)
(declare-fun Tyarg () I8)
(declare-fun Tzarg () I8)
(declare-fun i0 () I32)
(declare-fun x0 () I32)
(declare-fun x1 () I32)
(declare-fun pc0 () I32)
(declare-fun pc1 () I32)
(declare-fun pc2 () I32)
(declare-fun pc3 () I32)
(declare-fun pc4 () I32)
(declare-fun pc5 () I32)
(declare-fun pc6 () I32)
(declare-fun pc7 () I32)
(declare-fun pc8 () I32)
(declare-fun li8 () I32)
(declare-fun pc9 () I32)
(declare-fun pc10 () I32)
(declare-fun pc11 () I32)
(declare-fun pc12 () I32)
(declare-fun pc13 () I32)
(assert (and (= pc0 (_ bv35 32)) (and (= pc1 (_ bv36 32)) (and (= pc2 (_ bv37 32)) (and (= pc3 (_ bv38 32)) (and (= pc4 (_ bv39 32)) (and (and (= pc5 (_ bv40 32)) (= mainarg1 (_ bv10 32))) (and (and (= pc6 (_ bv41 32)) (= mainarg2 (_ bv20 32))) (and (= pc7 (_ bv42 32)) (and (and (and (= pc8 (_ bv43 32)) (= i0 maintmp)) (= li8 (_ bv43 32))) (and (and (= pc9 (_ bv44 32)) (= maintmp1 ((_ extract 7 0) mainarg1))) (and (and (= pc10 (_ bv45 32)) (= Txarg maintmp1)) (and (and (= pc11 (_ bv46 32)) (= maintmp3 ((_ extract 7 0) mainarg2))) (and (and (= pc12 (_ bv47 32)) (= Tyarg maintmp3)) (and (= pc13 (_ bv48 32)) (= Tzarg maintmp3))))))))))))))))
(declare-fun pi0 () I32)
(declare-fun px0 () I32)
(declare-fun pi1 () I32)
(declare-fun px1 () I32)
(declare-fun Txpc0 () I32)
(declare-fun Typc0 () I32)
(declare-fun Tzpc0 () I32)
(declare-fun Txpc1 () I32)
(declare-fun Typc1 () I32)
(declare-fun Tzpc1 () I32)
(declare-fun Tx0 () Bool)
(declare-fun Ty0 () Bool)
(declare-fun Tz0 () Bool)
(declare-fun Tx1 () Bool)
(declare-fun Ty1 () Bool)
(declare-fun Tz1 () Bool)
(assert (and (and (= Txpc0 (_ bv1 32)) (and (= Typc0 (_ bv16 32)) (= Tzpc0 (_ bv29 32)))) (and (and (= pi0 li8) (= px0 lx)) (and (and (and (or (and Tx0 (and (not Ty0) (not Tz0))) (or (and Ty0 (and (not Tx0) (not Tz0))) (and Tz0 (and (not Tx0) (not Ty0))))) (or (and (and (and Tx0 (and (= Txpc0 (_ bv1 32)) (and (or (and (= px0 lx) (= Txtmp x)) (or (and (= px0 (_ bv26 32)) (= Txtmp x0)) (and (= px0 (_ bv32 32)) (= Txtmp x1)))) (and (= pi1 pi0) (= px1 px0))))) (= Txpc1 (_ bv2 32))) (and (= Typc1 Typc0) (= Tzpc1 Tzpc0))) (or (and (and (and Tx0 (and (= Txpc0 (_ bv2 32)) (and (= Txtmp1 (bvsgt Txtmp (_ bv3 32))) (and (= pi1 pi0) (= px1 px0))))) (= Txpc1 (_ bv3 32))) (and (= Typc1 Typc0) (= Tzpc1 Tzpc0))) (or (and (and (and Tx0 (and (= Txpc0 (_ bv3 32)) (and (= pi1 pi0) (= px1 px0)))) (or (and Txtmp1 (= Txpc1 (_ bv4 32))) (and (not Txtmp1) (= Txpc1 (_ bv15 32))))) (and (= Typc1 Typc0) (= Tzpc1 Tzpc0))) (or (and (and (and Tx0 (and (= Txpc0 (_ bv4 32)) (and (or (and (= pi0 li) (= Txtmp3 i)) (and (= pi0 (_ bv43 32)) (= Txtmp3 i0))) (and (= pi1 pi0) (= px1 px0))))) (= Txpc1 (_ bv5 32))) (and (= Typc1 Typc0) (= Tzpc1 Tzpc0))) (or (and (and (and Tx0 (and (= Txpc0 (_ bv5 32)) (and (= Txtmp4 (bvult Txtmp3 (_ bv10 32))) (and (= pi1 pi0) (= px1 px0))))) (= Txpc1 (_ bv6 32))) (and (= Typc1 Typc0) (= Tzpc1 Tzpc0))) (or (and (and (and Tx0 (and (= Txpc0 (_ bv6 32)) (and (= pi1 pi0) (= px1 px0)))) (or (and Txtmp4 (= Txpc1 (_ bv9 32))) (and (not Txtmp4) (= Txpc1 (_ bv7 32))))) (and (= Typc1 Typc0) (= Tzpc1 Tzpc0))) (or (and (and (and Tx0 (= Txpc0 (_ bv7 32))) (= Txpc1 (_ bv8 32))) (and (= Typc1 Typc0) (= Tzpc1 Tzpc0))) (or (and (and (and Tx0 (and (= Txpc0 (_ bv8 32)) (and (= pi1 pi0) (= px1 px0)))) false) (and (= Typc1 Typc0) (= Tzpc1 Tzpc0))) (or (and (and (and Tx0 (and (= Txpc0 (_ bv9 32)) (and (= Txtmp7 ((_ zero_extend 24) Txarg)) (and (= pi1 pi0) (= px1 px0))))) (= Txpc1 (_ bv10 32))) (and (= Typc1 Typc0) (= Tzpc1 Tzpc0))) (or (and (and (and Tx0 (and (= Txpc0 (_ bv10 32)) (and (= Txtmp8 Txtmp7) (and (= pi1 pi0) (= px1 px0))))) (= Txpc1 (_ bv11 32))) (and (= Typc1 Typc0) (= Tzpc1 Tzpc0))) (or (and (and (and Tx0 (and (= Txpc0 (_ bv11 32)) (and (= Txtmp9 ((_ sign_extend 32) Txtmp3)) (and (= pi1 pi0) (= px1 px0))))) (= Txpc1 (_ bv12 32))) (and (= Typc1 Typc0) (= Tzpc1 Tzpc0))) (or (and (and (and Tx0 (and (= Txpc0 (_ bv12 32)) (and (= Txtmp10 (select a ((_ extract 3 0) Txtmp9))) (and (= pi1 pi0) (= px1 px0))))) (= Txpc1 (_ bv13 32))) (and (= Typc1 Typc0) (= Tzpc1 Tzpc0))) (or (and (and (and Tx0 (and (= Txpc0 (_ bv13 32)) (and (= Txtmp10 Txtmp8) (and (= pi1 pi0) (= px1 px0))))) (= Txpc1 (_ bv14 32))) (and (= Typc1 Typc0) (= Tzpc1 Tzpc0))) (or (and (and (and Tx0 (and (= Txpc0 (_ bv14 32)) (and (= pi1 pi0) (= px1 px0)))) (= Txpc1 (_ bv15 32))) (and (= Typc1 Typc0) (= Tzpc1 Tzpc0))) (or (and (and (and Tx0 (and (= Txpc0 (_ bv15 32)) (and (= pi1 pi0) (= px1 px0)))) false) (and (= Typc1 Typc0) (= Tzpc1 Tzpc0))) (or (and (and (and Ty0 (and (= Typc0 (_ bv16 32)) (and (or (and (= px0 lx) (= Tytmp x)) (or (and (= px0 (_ bv26 32)) (= Tytmp x0)) (and (= px0 (_ bv32 32)) (= Tytmp x1)))) (and (= pi1 pi0) (= px1 px0))))) (= Typc1 (_ bv17 32))) (and (= Txpc1 Txpc0) (= Tzpc1 Tzpc0))) (or (and (and (and Ty0 (and (= Typc0 (_ bv17 32)) (and (= Tytmp1 (bvsgt Tytmp (_ bv3 32))) (and (= pi1 pi0) (= px1 px0))))) (= Typc1 (_ bv18 32))) (and (= Txpc1 Txpc0) (= Tzpc1 Tzpc0))) (or (and (and (and Ty0 (and (= Typc0 (_ bv18 32)) (and (= pi1 pi0) (= px1 px0)))) (or (and Tytmp1 (= Typc1 (_ bv19 32))) (and (not Tytmp1) (= Typc1 (_ bv26 32))))) (and (= Txpc1 Txpc0) (= Tzpc1 Tzpc0))) (or (and (and (and Ty0 (and (= Typc0 (_ bv19 32)) (and (= Tytmp3 ((_ zero_extend 24) Tyarg)) (and (= pi1 pi0) (= px1 px0))))) (= Typc1 (_ bv20 32))) (and (= Txpc1 Txpc0) (= Tzpc1 Tzpc0))) (or (and (and (and Ty0 (and (= Typc0 (_ bv20 32)) (and (= Tytmp4 Tytmp3) (and (= pi1 pi0) (= px1 px0))))) (= Typc1 (_ bv21 32))) (and (= Txpc1 Txpc0) (= Tzpc1 Tzpc0))) (or (and (and (and Ty0 (and (= Typc0 (_ bv21 32)) (and (and (= lj lj) (= Tytmp5 j)) (and (= pi1 pi0) (= px1 px0))))) (= Typc1 (_ bv22 32))) (and (= Txpc1 Txpc0) (= Tzpc1 Tzpc0))) (or (and (and (and Ty0 (and (= Typc0 (_ bv22 32)) (and (= Tytmp6 ((_ sign_extend 32) Tytmp5)) (and (= pi1 pi0) (= px1 px0))))) (= Typc1 (_ bv23 32))) (and (= Txpc1 Txpc0) (= Tzpc1 Tzpc0))) (or (and (and (and Ty0 (and (= Typc0 (_ bv23 32)) (and (= Tytmp7 (select a ((_ extract 3 0) Tytmp6))) (and (= pi1 pi0) (= px1 px0))))) (= Typc1 (_ bv24 32))) (and (= Txpc1 Txpc0) (= Tzpc1 Tzpc0))) (or (and (and (and Ty0 (and (= Typc0 (_ bv24 32)) (and (= Tytmp7 Tytmp4) (and (= pi1 pi0) (= px1 px0))))) (= Typc1 (_ bv25 32))) (and (= Txpc1 Txpc0) (= Tzpc1 Tzpc0))) (or (and (and (and Ty0 (and (= Typc0 (_ bv25 32)) (and (= pi1 pi0) (= px1 px0)))) (= Typc1 (_ bv28 32))) (and (= Txpc1 Txpc0) (= Tzpc1 Tzpc0))) (or (and (and (and Ty0 (and (= Typc0 (_ bv26 32)) (and (= x0 (_ bv3 32)) (and (= pi1 pi0) (= px1 (_ bv26 32)))))) (= Typc1 (_ bv27 32))) (and (= Txpc1 Txpc0) (= Tzpc1 Tzpc0))) (or (and (and (and Ty0 (and (= Typc0 (_ bv27 32)) (and (= pi1 pi0) (= px1 px0)))) (= Typc1 (_ bv28 32))) (and (= Txpc1 Txpc0) (= Tzpc1 Tzpc0))) (or (and (and (and Ty0 (and (= Typc0 (_ bv28 32)) (and (= pi1 pi0) (= px1 px0)))) false) (and (= Txpc1 Txpc0) (= Tzpc1 Tzpc0))) (or (and (and (and Tz0 (and (= Tzpc0 (_ bv29 32)) (and (or (and (= px0 lx) (= Tztmp x)) (or (and (= px0 (_ bv26 32)) (= Tztmp x0)) (and (= px0 (_ bv32 32)) (= Tztmp x1)))) (and (= pi1 pi0) (= px1 px0))))) (= Tzpc1 (_ bv30 32))) (and (= Txpc1 Txpc0) (= Typc1 Typc0))) (or (and (and (and Tz0 (and (= Tzpc0 (_ bv30 32)) (and (= Tztmp1 (= Tztmp (_ bv3 32))) (and (= pi1 pi0) (= px1 px0))))) (= Tzpc1 (_ bv31 32))) (and (= Txpc1 Txpc0) (= Typc1 Typc0))) (or (and (and (and Tz0 (and (= Tzpc0 (_ bv31 32)) (and (= pi1 pi0) (= px1 px0)))) (or (and Tztmp1 (= Tzpc1 (_ bv32 32))) (and (not Tztmp1) (= Tzpc1 (_ bv34 32))))) (and (= Txpc1 Txpc0) (= Typc1 Typc0))) (or (and (and (and Tz0 (and (= Tzpc0 (_ bv32 32)) (and (= x1 (_ bv4 32)) (and (= pi1 pi0) (= px1 (_ bv32 32)))))) (= Tzpc1 (_ bv33 32))) (and (= Txpc1 Txpc0) (= Typc1 Typc0))) (or (and (and (and Tz0 (and (= Tzpc0 (_ bv33 32)) (and (= pi1 pi0) (= px1 px0)))) (= Tzpc1 (_ bv34 32))) (and (= Txpc1 Txpc0) (= Typc1 Typc0))) (and (and (and Tz0 (and (= Tzpc0 (_ bv34 32)) (and (= pi1 pi0) (= px1 px0)))) false) (and (= Txpc1 Txpc0) (= Typc1 Typc0))))))))))))))))))))))))))))))))))))) (and (or (and Tx1 (and (not Ty1) (not Tz1))) (or (and Ty1 (and (not Tx1) (not Tz1))) (and Tz1 (and (not Tx1) (not Ty1))))) (or (and Tx1 (and (= Txpc1 (_ bv1 32)) (or (and (= px1 lx) (= Txtmp x)) (or (and (= px1 (_ bv26 32)) (= Txtmp x0)) (and (= px1 (_ bv32 32)) (= Txtmp x1)))))) (or (and Tx1 (and (= Txpc1 (_ bv2 32)) (= Txtmp1 (bvsgt Txtmp (_ bv3 32))))) (or (and Tx1 (= Txpc1 (_ bv3 32))) (or (and Tx1 (and (= Txpc1 (_ bv4 32)) (or (and (= pi1 li) (= Txtmp3 i)) (and (= pi1 (_ bv43 32)) (= Txtmp3 i0))))) (or (and Tx1 (and (= Txpc1 (_ bv5 32)) (= Txtmp4 (bvult Txtmp3 (_ bv10 32))))) (or (and Tx1 (= Txpc1 (_ bv6 32))) (or (and Tx1 (= Txpc1 (_ bv7 32))) (or (and (and Tx1 (= Txpc1 (_ bv8 32))) false) (or (and Tx1 (and (= Txpc1 (_ bv9 32)) (= Txtmp7 ((_ zero_extend 24) Txarg)))) (or (and Tx1 (and (= Txpc1 (_ bv10 32)) (= Txtmp8 Txtmp7))) (or (and Tx1 (and (= Txpc1 (_ bv11 32)) (= Txtmp9 ((_ sign_extend 32) Txtmp3)))) (or (and Tx1 (and (= Txpc1 (_ bv12 32)) (= Txtmp10 (select a ((_ extract 3 0) Txtmp9))))) (or (and Tx1 (and (= Txpc1 (_ bv13 32)) (= Txtmp10 Txtmp8))) (or (and Tx1 (= Txpc1 (_ bv14 32))) (or (and (and Tx1 (= Txpc1 (_ bv15 32))) false) (or (and Ty1 (and (= Typc1 (_ bv16 32)) (or (and (= px1 lx) (= Tytmp x)) (or (and (= px1 (_ bv26 32)) (= Tytmp x0)) (and (= px1 (_ bv32 32)) (= Tytmp x1)))))) (or (and Ty1 (and (= Typc1 (_ bv17 32)) (= Tytmp1 (bvsgt Tytmp (_ bv3 32))))) (or (and Ty1 (= Typc1 (_ bv18 32))) (or (and Ty1 (and (= Typc1 (_ bv19 32)) (= Tytmp3 ((_ zero_extend 24) Tyarg)))) (or (and Ty1 (and (= Typc1 (_ bv20 32)) (= Tytmp4 Tytmp3))) (or (and Ty1 (and (= Typc1 (_ bv21 32)) (and (= lj lj) (= Tytmp5 j)))) (or (and Ty1 (and (= Typc1 (_ bv22 32)) (= Tytmp6 ((_ sign_extend 32) Tytmp5)))) (or (and Ty1 (and (= Typc1 (_ bv23 32)) (= Tytmp7 (select a ((_ extract 3 0) Tytmp6))))) (or (and Ty1 (and (= Typc1 (_ bv24 32)) (= Tytmp7 Tytmp4))) (or (and Ty1 (= Typc1 (_ bv25 32))) (or (and Ty1 (and (= Typc1 (_ bv26 32)) (= x0 (_ bv3 32)))) (or (and Ty1 (= Typc1 (_ bv27 32))) (or (and (and Ty1 (= Typc1 (_ bv28 32))) false) (or (and Tz1 (and (= Tzpc1 (_ bv29 32)) (or (and (= px1 lx) (= Tztmp x)) (or (and (= px1 (_ bv26 32)) (= Tztmp x0)) (and (= px1 (_ bv32 32)) (= Tztmp x1)))))) (or (and Tz1 (and (= Tzpc1 (_ bv30 32)) (= Tztmp1 (= Tztmp (_ bv3 32))))) (or (and Tz1 (= Tzpc1 (_ bv31 32))) (or (and Tz1 (and (= Tzpc1 (_ bv32 32)) (= x1 (_ bv4 32)))) (or (and Tz1 (= Tzpc1 (_ bv33 32))) (and (and Tz1 (= Tzpc1 (_ bv34 32))) false)))))))))))))))))))))))))))))))))))) (or (= Txpc0 (_ bv7 32)) (or (= Typc0 (_ bv7 32)) (or (= Tzpc0 (_ bv7 32)) (or (= Txpc1 (_ bv7 32)) (or (= Typc1 (_ bv7 32)) (= Tzpc1 (_ bv7 32)))))))))))
(check-sat)
(exit)
