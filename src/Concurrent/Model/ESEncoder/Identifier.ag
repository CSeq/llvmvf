{
-------------------------------------------------------------------------------
-- Module    :  Concurrent.Model.ESEncoder.Identifier
-- Copyright :  (c) 2012 Marcelo Sousa
-------------------------------------------------------------------------------
}

module {Concurrent.Model.ESEncoder.Identifier}{}{}

-- Identifiers
attr Identifier
  inh tn      :: {String}
  syn ssymbol :: {SSymbol}
  syn ident   :: {String}
  syn sexpr   :: {ISExpr}

sem Identifier
  | Global
     lhs.ssymbol = @loc.sym
        .ident   = @name.self
        .sexpr   = ISExpr $ IdentExpr $ SymIdent @loc.sym
     loc.sym     = SimpleSym @name.self
  | Local
     lhs.ssymbol = @loc.sym 
        .ident   = @name.self
        .sexpr   = ISExpr $ IdentExpr $ SymIdent @loc.sym
     loc.sym     = SimpleSym $ @lhs.tn ++ @name.self

{

freshId :: Id -> Id
freshId x = x ++ "0"

}
