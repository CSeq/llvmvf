{
-------------------------------------------------------------------------------
-- Module    :  Language.LLVMIR.Base
-- Copyright :  (c) 2012 Marcelo Sousa
-------------------------------------------------------------------------------
}

module {Language.LLVMIR.Base}{}{}

imports 
{
import Prelude              hiding (sequence)
import Data.Char            (chr)
import qualified Data.Map as Data.Map
import qualified Data.Map as Map
import Data.Map
}

-------------------------------------------------------------------------------
-- Module - LLVM IR Module
-------------------------------------------------------------------------------

type Id = (String)
type Label = (String) 
type MLabel = maybe Label
type MId = maybe Id

type Functions = [Function]
type GlobalVars = [GlobalVar]
type Identifiers = [Identifier]
type Arguments = [Argument]
type Parameters = [Parameter]
type FuncAttrs = [FunAttr]
type BasicBlocks = [BasicBlock]
type Instructions = [Instruction]
type Attributes = [Attribute]
type ModuleAsms = [ModuleAsm]
type NamedTys = [NamedTy]
type Aliases = [Alias]
type Ints = [Int]

type MLinkageTy = maybe Linkage
type MVisibility = maybe Visibility
type MCConv = maybe CConv
type MUnnamedAddr = maybe Bool -- maybe () would be better
type MConstant = maybe Bool
type MDefinitionTy = maybe DefinitionTy
type MAttributes = maybe Attributes
type MAlign = maybe Align
type MGCName = maybe GCName
type MModuleAsms = maybe ModuleAsms
type MSection = maybe Section
type MNamedTys = maybe NamedTys
type MValue = maybe Value

type Triplet = (Int, Int, Int)
type MapTyInt = map {Type} Triplet
type PTyInt = (Type, Int)
type PTyIntL = [PTyInt]

type DLayout = [String]

type IntTyValId = (Type, Value, Identifier)
type IntTyValIdL = [IntTyValId]

data Module 
      | Module
          id :: String
          layout :: DataLayout
          target :: TargetData
          gvars :: GlobalVars
          funs  :: Functions
          aliases :: Aliases
--          namedty :: MNamedTys
--          symbtbl :: {[SymbolTableEntry]}
--          namedm :: NamedMetadata
--          mdlasm :: MModuleAsms

-- data Endianness
--       | BigEndian
--       | LittleEndian

data DataLayout
      | DataLayout 
          s :: DLayout
--          endianness :: Endianness
--          pointerSize :: Int
--          prefAlignTy :: MapTyInt

data Target
    | MacOs
    | Linux
    
data TargetData
    | TargetData
        s :: String
        t :: Target

data ModuleAsm
      | ModuleAsm asm :: String
      
data NamedTy 
      | NamedTy 
          name :: Id
          ty   :: Type

data GlobalVar 
      | GlobalVar 
          name    :: Id
          linkage :: Linkage
          isConst :: Bool
          isUaddr :: Bool 
--          ty       :: Type 
--          ival    :: MValue
--          section  :: MSection
          align :: Align

data Function 
      | FunctionDef 
          name    :: Id
          linkage :: Linkage
          retty   :: Type
          params  :: Parameters
--          visibility :: MVisibility
--          cconv      :: MCConv
--          uaddr      :: MUnnamedAddr
--          paramattr  :: MAttributes
--          fnAttrs    :: FuncAttrs
--          section    :: MSection
--          optAlign   :: MAlign
--          gcName     :: MGCName
--          bb         :: BasicBlocks
      | FunctionDecl
          name       :: Id
          linkage    :: Linkage
          retty      :: Type
          params     :: Parameters
--          visibility :: MVisibility
--          cconv      :: MCConv
--          uaddr      :: MUnnamedAddr
--          paramattr  :: MAttributes
--          optAlign   :: MAlign          
--          gcName     :: MGCName
          
data BasicBlock
      | BasicBlock 
          label  :: Label
          instrs :: Instructions
--          tmn    :: Terminator

data Terminator
      | Ret 
          v :: MValue
      | Br  
          v :: Bool 
          t :: Identifier 
          f :: Identifier
      | UBr 
          d :: Identifier
      | Switch 
          elems :: IntTyValIdL
      
data Instruction
      | Instruction s :: String
      | Alloca
          id    :: Identifier
          ty    :: Type
          align :: Int
--          num   :: Int
--          align :: Align
      
data Value 
      | Id v :: Identifier
      | Const c :: Constant

data Identifier 
      | Global name :: Id -- (functions, global variables) begin with the '@'
      | Local  name :: Id -- (register names, types) begin with the '%'

-- Constants
-- Metadata node constant missing
-- Poison values
data Constant
      | BoolC v :: Bool
      | IntC  v :: Int ty :: Type
      | FloatC v :: Float ty :: Type
      | StructC elems :: PTyIntL
      | ArrayC ty :: Type val :: String -- elems ::  PTyIntL
      | VectorC elems :: PTyIntL      
      | ZeroInitC ty :: Type
      | NullC ty :: Type
      | UndefC
      | BlockAddr fun :: Identifier label :: Identifier

      
data Align
      | Align n :: Int

data Section
      | Section s :: String
      
data Argument
      | Argument

data Parameter
      | Parameter 
          var :: Id  -- ^In practice, the name is optional
          ty  :: Type
       -- attr :: MAttribute            

--  All Global Variables and Functions have one of the following types of linkage.
data Linkage
    | ExternalLinkage     -- ^Externally visible function
    | AvailableExternallyLinkage
    | LinkOnceAnyLinkage  -- ^Keep one copy of function when linking (inline)
    | LinkOnceODRLinkage  -- ^Same, but only replaced by something equivalent.
    | WeakAnyLinkage      -- ^Keep one copy of named function when linking (weak)
    | WeakODRLinkage      -- ^Same, but only replaced by something equivalent.
    | AppendingLinkage    -- ^Special purpose, only applies to global arrays
    | InternalLinkage     -- ^Rename collisions when linking (static functions)
    | PrivateLinkage      -- ^Like Internal, but omit from symbol table
    | DLLImportLinkage    -- ^Function to be imported from DLL
    | DLLExportLinkage    -- ^Function to be accessible from DLL
    | ExternalWeakLinkage -- ^ExternalWeak linkage description
    | GhostLinkage        -- ^Stand-in functions for streaming fns from BC files
    | CommonLinkage       -- ^Tentative definitions
    | LinkerPrivateLinkage -- ^Like Private, but linker removes.
    | LinkerPrivateWeakLinkage -- ^Similar to PrivateLinkage, but the symbol is weak.
    | LinkerPrivateWeakDefAutoLinkage -- ^Similar to LinkerPrivateWeakLinkage, but its known that the address of the object is not taken.

-- Call Convention
-- LLVM functions, calls and invokes can all have an optional calling convention specified for the call.
data CConv 
      | Ccc    -- The C calling convention
      | Fastcc -- The fast calling convention
      | Coldcc -- The cold calling convention
      | Cc10   -- GHC convention
      | Cc n :: Int -- Numbered convention

-- All Global Variables and Functions have one of the following visibility styles.
data Visibility 
      | Default
      | Hidden
      | Protected

-- Parameter Attributes      
data Attribute
    | ZExtAttribute
    | SExtAttribute
    | NoReturnAttribute
    | InRegAttribute
    | StructRetAttribute
    | NoUnwindAttribute
    | NoAliasAttribute
    | ByValAttribute
    | NestAttribute
    | ReadNoneAttribute
    | ReadOnlyAttribute
    | NoInlineAttribute
    | AlwaysInlineAttribute
    | OptimizeForSizeAttribute
    | StackProtectAttribute
    | StackProtectReqAttribute
    | NoCaptureAttribute
    | NoRedZoneAttribute
    | NoImplicitFloatAttribute
    | NakedAttribute

-- Garbage Collector Names   
data GCName
      | GCName name :: String

-- Function Attributes
data FunAttr
      | AddressSafety
      | Alignstack n :: Int
      | Alwaysinline
      | Nonlazybind
      | Inlinehint
      | Naked
      | Noimplicitfloat
      | Noinline
      | Noredzone
      | Noreturn
      | Nounwind
      | Optsize
      | Readnone
      | Readonly
      | ReturnsTwice
      | Ssp
      | Sspreq
      | Uwtable
                  
data DefinitionTy
      | ThreadLocal
      | Constant

data Alias
      | Alias 
          name       :: Id
--          linkage    :: MLinkageTy
--          visibility :: MVisibility
--          aliaseeTy  :: Type
--          aliasee    :: Id
  
set Every = Module GlobalVar Function Linkage CConv Visibility DefinitionTy LocalVar Argument Align GCName FunAttr BasicBlock Instruction Terminator NamedTy DataLayout Alias Attribute Section Value Identifier Constant TargetData Target Parameter

deriving Every: Show
deriving Every: Eq
deriving Every: Ord
deriving Linkage: Enum
