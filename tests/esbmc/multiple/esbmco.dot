digraph structs {
bgcolor=transparent;
node [shape=Mrecord];
-1 [label="||", shape=Mdiamond];
subgraph cluster_main {
style=filled; color=lightblue;
subgraph cluster_main1 {
style=filled; color=gray;
35 [label="35 %id1 = alloca i64, align 8"];
36 [label="36 %id2 = alloca i64, align 8"];
37 [label="37 %id3 = alloca i64, align 8"];
38 [label="38 %arg1 = alloca i32, align 4"];
39 [label="39 %arg2 = alloca i32, align 4"];
40 [label="40 void store i32 10, i32* %arg1, align 4"];
41 [label="41 void store i32 20, i32* %arg2, align 4"];
42 [label="42 call nondet_uint"];
43 [label="43 void store i32 %tmp, i32* @i, align 4"];
44 [label="44 %tmp1 = bitcast i32* %arg1 to i8*"];
45 [label="45 create_thread"];
46 [label="46 %tmp3 = bitcast i32* %arg2 to i8*"];
47 [label="47 create_thread"];
48 [label="48 create_thread"];
49 [label="49 ret i32 0"];
 label = "basic block bb"; }
 label = "function main"; }
subgraph cluster_Tx {
style=filled; color=lightblue;
subgraph cluster_Tx1 {
style=filled; color=gray;
1 [label="1 %tmp = load i32* @x, align 4"];
2 [label="2 %tmp1 = icmp sgt i32 %tmp, i32 3"];
3 [label="3 br i1 %tmp1, label %bb2, label %bb11"];
 label = "basic block bb"; }
subgraph cluster_Tx2 {
style=filled; color=gray;
4 [label="4 %tmp3 = load i32* @i, align 4"];
5 [label="5 %tmp4 = icmp ult i32 %tmp3, i32 10"];
6 [label="6 br i1 %tmp4, label %bb6, label %bb5"];
 label = "basic block bb2"; }
subgraph cluster_Tx3 {
style=filled; color=gray;
7 [label="7 call __assert_fail"];
8 [label="8 unreachable"];
 label = "basic block bb5"; }
subgraph cluster_Tx4 {
style=filled; color=gray;
9 [label="9 %tmp7 = bitcast i8* %arg to i32*"];
10 [label="10 %tmp8 = load i32* %tmp7, align 4"];
11 [label="11 %tmp9 = sext i32 %tmp3 to i64"];
12 [label="12 %tmp10 = getelementptr [10 x i32]* @a, i64 0, i64 %tmp9"];
13 [label="13 void store i32 %tmp8, i32* %tmp10, align 4"];
14 [label="14 br label %bb11"];
 label = "basic block bb6"; }
subgraph cluster_Tx5 {
style=filled; color=gray;
15 [label="15 ret undef"];
 label = "basic block bb11"; }
 label = "function Tx"; }
subgraph cluster_Ty {
style=filled; color=lightblue;
subgraph cluster_Ty1 {
style=filled; color=gray;
16 [label="16 %tmp = load i32* @x, align 4"];
17 [label="17 %tmp1 = icmp sgt i32 %tmp, i32 3"];
18 [label="18 br i1 %tmp1, label %bb2, label %bb8"];
 label = "basic block bb"; }
subgraph cluster_Ty2 {
style=filled; color=gray;
19 [label="19 %tmp3 = bitcast i8* %arg to i32*"];
20 [label="20 %tmp4 = load i32* %tmp3, align 4"];
21 [label="21 %tmp5 = load i32* @j, align 4"];
22 [label="22 %tmp6 = sext i32 %tmp5 to i64"];
23 [label="23 %tmp7 = getelementptr [10 x i32]* @a, i64 0, i64 %tmp6"];
24 [label="24 void store i32 %tmp4, i32* %tmp7, align 4"];
25 [label="25 br label %bb9"];
 label = "basic block bb2"; }
subgraph cluster_Ty3 {
style=filled; color=gray;
26 [label="26 void store i32 3, i32* @x, align 4"];
27 [label="27 br label %bb9"];
 label = "basic block bb8"; }
subgraph cluster_Ty4 {
style=filled; color=gray;
28 [label="28 ret undef"];
 label = "basic block bb9"; }
 label = "function Ty"; }
subgraph cluster_Tz {
style=filled; color=lightblue;
subgraph cluster_Tz1 {
style=filled; color=gray;
29 [label="29 %tmp = load i32* @x, align 4"];
30 [label="30 %tmp1 = icmp eq i32 %tmp, i32 3"];
31 [label="31 br i1 %tmp1, label %bb2, label %bb3"];
 label = "basic block bb"; }
subgraph cluster_Tz2 {
style=filled; color=gray;
32 [label="32 void store i32 4, i32* @x, align 4"];
33 [label="33 br label %bb3"];
 label = "basic block bb2"; }
subgraph cluster_Tz3 {
style=filled; color=gray;
34 [label="34 ret undef"];
 label = "basic block bb3"; }
 label = "function Tz"; }
-1 -> 1;
1 -> 2;
2 -> 3;
3 -> 4;
3 -> 15;
4 -> 5;
5 -> 6;
6 -> 9;
6 -> 7;
7 -> 8;
9 -> 10;
10 -> 11;
11 -> 12;
12 -> 13;
13 -> 14;
14 -> 15;
-1 -> 16;
16 -> 17;
17 -> 18;
18 -> 19;
18 -> 26;
19 -> 20;
20 -> 21;
21 -> 22;
22 -> 23;
23 -> 24;
24 -> 25;
25 -> 28;
26 -> 27;
27 -> 28;
-1 -> 29;
29 -> 30;
30 -> 31;
31 -> 32;
31 -> 34;
32 -> 33;
33 -> 34;
35 -> 36;
36 -> 37;
37 -> 38;
38 -> 39;
39 -> 40;
40 -> 41;
41 -> 42;
42 -> 43;
43 -> 44;
44 -> 45;
45 -> -1;
45 -> 46;
46 -> 47;
47 -> -1;
47 -> 48;
48 -> -1;
48 -> 49; }